	void findtopo(int node,vector<int>&vis,stack<int>&st,vector<int>adj[])
	{
	    vis[node]==1;
	    for(auto it : adj[node])
	    {
	        if(vis[it]==0)
	        {
	        findtopo(it,vis,st,adj);
	        }
	    }
	    st.push(node);
	}
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int n, vector<int> adj[]) 
	{
	    // code here
	    stack<int>st;
	    vector<int>vis(n,0);
	    for(int i=0;i<n;i++)
	    {
	        if(vis[i]==0)
	        {
	             findtopo(i,vis,st,adj);
	        }
	    }
	    
	    vector<int>topo;
	    while(st.empty()==false)
	    {
	        topo.push_back(st.top());
	        st.pop();
	    }
	    return topo;
	}
