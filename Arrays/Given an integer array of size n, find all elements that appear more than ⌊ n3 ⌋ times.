vector<int> majorityElement(vector<int>& nums) {
        int n=nums.size();
        int num1=-1,num2=-1,count1=0,count2=0;
        for(int i=0;i<n;i++)
        {
            if(nums[i]==num1)
            {
                count1++;
            }
            else if(nums[i]==num2)
            {
                count2++;
            }
            else if(count1==0)
            {
                num1=nums[i];
                count1=1;
            }
            else if(count2==0)
            {
                num2=nums[i];
                count2=1;
            }
            else
            {
                count1--;
                count2--;
            }
        }
        vector<int>ans;
        count1=count2=0;
        for(int i=0;i<n;i++)
        {
            if(nums[i]==num1)
            {
                count1++;
            }
            if(nums[i]==num2)
            {
                count2++;
            }
        }
        if(count1>n/3)
        {
            ans.push_back(num1);
        }
        if(count2>n/3 && num1!=num2)
        {
            ans.push_back(num2);
        }
        return ans;
    }
    
    
    as we know there cant be more than two elements occuring more than n/3 times so we will take two varibales num1 and num2 with two counts count 1 and count 2 
    we will start the iteration with the conditon if nums[i]==num1 then count1++ else if num[i]==num2 then count 2++ then
    if count1 =0 we will update num1 to nums[i] with count1++ if count 2==0 we will update the num2 with num[i] with count2++
    otherwise we need to decrement both count 1 and count 2
    
    even after this we need to check how many times num1 and num2 are occuring if greater than n/3 times we have our answer.
