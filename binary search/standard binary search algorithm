int searchInSorted(int arr[], int n, int k) 
{ 
    
       // Your code here
 int l = 0, r = n-1;
    // calculate mid
    int m = l + (r-l) / 2;

    // binary search to find the element in sorted array
	while (l <= r) { 
	    // calculate mid on each iteration
		m = l + (r - l) / 2; 

		// Check if x is present at mid 
		if (arr[m] == k) 
			return 1; 

		// If x greater, ignore left half 
		if (arr[m] < k) 
			l = m + 1; 

		// If x is smaller, ignore right half 
		else
			r = m - 1; 
	} 
	
	// if we reach here, then element was not present 
	return -1; 
}
