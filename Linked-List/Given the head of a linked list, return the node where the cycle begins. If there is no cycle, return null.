ListNode *detectCycle(ListNode *head) {
        if(head==NULL || head->next==NULL)
        {
            return NULL;
        }
        ListNode *slow=head;
        ListNode *fast=head;
        ListNode *entry=head;
        while(fast->next!=NULL && fast->next->next!=NULL)
        {
            fast=fast->next->next;
            slow=slow->next;
            if(fast==slow)
            {
                while(slow!=entry)
                {
                    slow=slow->next;
                    entry=entry->next;
                }
                return entry;
            }
                
        }
        return NULL;
        
    }
    
    we are using a three pointer method here we have fast slow and entry pointer first we move fast pointer to fast to  next of next and slow point to next of slow
    until fast meets slow then we move entry and slow pointer until both meet , both will meet at the point from where cycle starts
