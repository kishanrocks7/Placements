void nextPermutation(vector<int>& nums) {
        int n=nums.size();
        int idx=-1;
        for(int i=n-1;i>0;i--)
        {
            if(nums[i]>nums[i-1])
            {
                idx=i;
                break;
            }
        }
        if(idx==-1)
        {
            reverse(nums.begin(),nums.end());
        }
        else{
            int prev=idx;
            for(int i=idx+1;i<n;i++)
            {
                if(nums[idx-1]<nums[i] && nums[i]<=nums[prev])
                {
                    prev=i;
                }
            }
            swap(nums[idx-1],nums[prev]);
            reverse(nums.begin()+idx,nums.end());
        }
    }


as with the lexographical graph knowledge what wwe need to do is , we need to iterate from back until we find a nuber which is lesser than the last number meaning n-i<n-i-1
then from index i to n we need to find the number which is greater than the number at index i-1 and lesser than the number at index i and we will swap those number and after that 
we will reverse the array from i to n.
