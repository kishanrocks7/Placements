int search(int[] nums, int target) {
        int start = 0;
        int end = nums.length - 1;
        //because this is rolated array with one rolation, when we divide into two sub array, one will be sorted and other will be unsorted
        while(start <= end){
            int mid = start + (end - start)/2;
            if(nums[mid] == target)
                return mid;
            //this condition will tell first half is sorted or not
            if(nums[start] <= nums[mid]){
                if(nums[start] <= target && target <= nums[mid]){
                    end = mid -1;
                }else{
                    start = mid + 1;
                }
            }else{
                if(nums[mid] <= target && target <= nums[end]){
                    start = mid + 1;
                }else{
                    end = mid - 1;
                }
            }
        }
        return -1;
    }
